name: BUILD

on:
  schedule:
    - cron: '0 */6 * * *'  # 每6小时检查一次
  workflow_dispatch:     # 允许手动触发
    inputs:
      tags:
        description: 'Version tag to build'
        required: true
        type: string

jobs:
  schedule_trigger:
    if: github.event_name == 'schedule'
    runs-on: self-hosted
    steps:
      - name: Get latest release from origin
        id: origin_release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: usual2970
          repo: certimate
          excludes: prerelease, draft

      - name: Check if existed in thie repo
        id: check_release
        uses: joutvhu/get-release@v1
        with:
          tag_name: ${{ steps.origin_release.outputs.release }}
        continue-on-error: true

      - name: Save info
        id: save_info
        run: |
            if [ ${{ steps.check_release.outcome }} == 'failure' ];then
              echo "New release detected!"
              echo "tag=${{ steps.origin_release.outputs.release }}" >> $GITHUB_OUTPUT
            else
              echo "No new release"
            fi
    outputs:
      tag: ${{ steps.save_info.outputs.tag }}

  manual_trigger:
    if: github.event_name == 'workflow_dispatch'
    runs-on: self-hosted
    steps:
      - name: Save info
        id: save_info
        run: |
            echo "Force trigger new build!"
            echo "Tag: ${{ github.event.inputs.tags }}"
            echo "tag=${{ github.event.inputs.tags }}" >> $GITHUB_OUTPUT

    outputs:
      tag: ${{ steps.save_info.outputs.tag }}

  build_trigger:
    needs: [schedule_trigger, manual_trigger] # 检查两个trigger的情况
    if: always() # 保持运行防止依赖跳过导致本任务不执行
    runs-on: self-hosted
    steps:
      - name: Save info
        id: save_info
        # 定时触发，只有tag不存在才进行
        run: |
            echo "Check trigger and tag"

            schedule_trigger=${{ needs.schedule_trigger.outputs.tag }}
            manual_trigger=${{ needs.manual_trigger.outputs.tag }}

            if [[ -z $schedule_trigger ]];then
              echo "New tag detected from schedule"
              echo tag=$schedule_trigger >> $GITHUB_OUTPUT
            elif [[ -z $manual_trigger ]] ;then
              echo "New tag detected from dispatch"
              echo tag=$manual_trigger >> $GITHUB_OUTPUT
            else
              echo "No new release"
            fi
    outputs:
      tag: ${{ steps.save_info.outputs.tag }}

  build_certimate:
    needs: [build_trigger]
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
      
      - name: Download target certimate
        id: download
        uses: robinraju/release-downloader@v1.11
        with:
          repository: 'usual2970/certimate'
          tag: ${{ needs.build_trigger.outputs.tag }}
          zipBall: true
          out-file-path: 'certimate'
          extract: true

      - name: Get folder
        id: folder
        run: |
          folder=`unzip -l ${{ fromJson(steps.download.outputs.downloaded_files)[0] }} | awk 'NR > 3 && /\/$/ {print $4; exit}'`
          echo "folder=${folder}" >> $GITHUB_OUTPUT

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.0

      - name: Build Admin dashboard UI
        working-directory: ./certimate/${{ steps.folder.outputs.folder }}
        run: npm --prefix=./ui ci && npm --prefix=./ui run build
      
      - name: Download latest release from go-win7
        uses: robinraju/release-downloader@v1.11
        with:
          repository: 'XTLS/go-win7'
          latest: true
          fileName: '*linux-amd64.zip'
          out-file-path: 'go_win7'
          extract: true

      - name: Build Go Binary
        working-directory: ./certimate/${{ steps.folder.outputs.folder }}
        run: |
          export PATH="${{ github.workspace }}/go_win7/bin":$PATH
          chmod a+x ${{ github.workspace }}/go_win7/bin/*
          chmod a+x ${{ github.workspace }}/go_win7/pkg/tool/linux_amd64/*
          make windows/amd64 windows/arm64

      - name: Compress output
        working-directory: ./certimate/${{ steps.folder.outputs.folder }}/build
        run: |
          mv certimate_windows_amd64 certimate_windows_amd64.exe
          7zz -tzip a certimate_windows_amd64.zip certimate_windows_amd64.exe

          mv certimate_windows_arm64 certimate_windows_arm64.exe
          7zz -tzip a certimate_windows_arm64.zip certimate_windows_arm64.exe

      - name: Release
        uses: ncipollo/release-action@v1.15.0
        with:
          draft: false
          generateReleaseNotes: true  #自动生成发行说明。
          owner: "SilenWang"
          repo: "certimate_win7"
          artifacts: '${{ github.workspace }}/certimate/${{ steps.folder.outputs.folder }}/build/*windows*.zip'
          removeArtifacts: true
          replacesArtifacts: true
          allowUpdates: true
          tag: ${{ needs.build_trigger.outputs.tag }}
          name: Release for certimate ${{ needs.build_trigger.outputs.tag }}